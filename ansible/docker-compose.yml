version: '3.8'

volumes:
  postgres_data:
  airflow-logs:
  shared_jars:
  grafana-storage:

networks:
  mlops_net:
    driver: bridge

services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U airflow"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mlops_net

  redis:
    image: redis:latest
    healthcheck:
      test: ["CMD","redis-cli","ping"]
      interval: 5s
    networks:
      - mlops_net

  spark-master:
    image: bitnami/spark:3.4.1
    hostname: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
      - SPARK_MASTER_PORT=7077
      - SPARK_MASTER_WEBUI_PORT=8080
      - PYSPARK_PYTHON=/usr/bin/python3
      - PYSPARK_DRIVER_PYTHON=/usr/bin/python3
    ports:
      - "18080:8080"
      - "17077:7077"
      - "14040:4040"
    volumes:
      - ./spark/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
      - ./shared/jars:/opt/shared-jars
    networks:
      - mlops_net

  spark-worker:
    image: bitnami/spark:3.4.1
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_WEBUI_PORT=8081
      - PYSPARK_PYTHON=/usr/bin/python3
      - PYSPARK_DRIVER_PYTHON=/usr/bin/python3
    ports:
      - "18081:8081"
      - "4041:4041"
    volumes:
      - ./shared/jars:/opt/shared-jars
    networks:
      - mlops_net

  airflow-webserver:
    build: ./airflow
    command:
        - bash
        - -c
        - |
          airflow db upgrade &&
          airflow users create --username admin --password admin \
            --firstname Admin --lastname Admin --role Admin --email admin@example.com && airflow webserver
    depends_on:
      - postgres
      - redis
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__WEBSERVER__WEB_SERVER_PORT=8080
      - AIRFLOW__CONN__SPARK__DEFAULT=spark://spark-master:7077
      - AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth
    ports:
      - "28080:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - airflow-logs:/opt/airflow/logs
      - ./shared/jars:/opt/shared-jars
    networks:
      - mlops_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  airflow-scheduler:
    build: ./airflow
    command: scheduler
    depends_on:
      - airflow-webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - airflow-logs:/opt/airflow/logs
      - ./shared/jars:/opt/shared-jars
    networks:
      - mlops_net

  airflow-worker:
    build: ./airflow
    command: celery worker
    depends_on:
      - airflow-scheduler
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - airflow-logs:/opt/airflow/logs
      - ./shared/jars:/opt/shared-jars
    networks:
      - mlops_net

  airflow-exporter:
    build:
      context: ./monitoring/airflow-exporter
    ports:
      - "9112:9112"
    environment:
      - AIRFLOW_HOST=http://airflow-webserver:8080
      - AIRFLOW_USERNAME=admin
      - AIRFLOW_PASSWORD=admin
    depends_on:
      airflow-webserver:
        condition: service_healthy
    networks:
      - mlops_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9112/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "19001:9090"
    networks:
      - mlops_net

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - mlops_net
    volumes:
      - grafana-storage:/var/lib/grafana
